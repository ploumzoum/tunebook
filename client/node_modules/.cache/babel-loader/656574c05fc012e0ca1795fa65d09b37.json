{"ast":null,"code":"var _jsxFileName = \"/home/saig/WebstormProjects/tunebook/src/pages/tune.form.tsx\";\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { TextField } from '@material-ui/core';\nimport Navbar from '../components/navbar';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nexport const FormContext = React.createContext({});\nexport default function TuneForm() {\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors\n  } = useForm();\n  const context = {\n    errors,\n    register\n  };\n\n  const onSubmit = data => console.log(data);\n\n  console.log(watch('Add a tune'));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(FormContext.Provider, {\n    value: context,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(FormField, {\n    label: \"Name\",\n    name: \"name\",\n    component: TextField,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(FormField, {\n    label: \"Composer\",\n    name: \"composer\",\n    component: TextField,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(FormField, {\n    label: \"Key\",\n    name: \"key\",\n    component: TextField,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(FormField, {\n    label: \"ABC\",\n    name: \"abc\",\n    component: TextField,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  })))))));\n}\n\nconst FormField = ({\n  label,\n  name,\n  component,\n  required,\n  errorText\n}) => {\n  return /*#__PURE__*/React.createElement(FormContext.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 3\n    }\n  }, ({\n    errors,\n    register\n  }) => {\n    const props = {\n      name,\n      id: name,\n      error: errors && errors[name],\n      label,\n      inputProps: required ? {\n        ref: register({\n          required: true\n        })\n      } : undefined,\n      helperText: errorText\n    };\n    return React.createElement(component, props);\n  });\n};","map":{"version":3,"sources":["/home/saig/WebstormProjects/tunebook/src/pages/tune.form.tsx"],"names":["React","useForm","TextField","Navbar","Container","Grid","FormContext","createContext","TuneForm","register","handleSubmit","watch","errors","context","onSubmit","data","console","log","FormField","label","name","component","required","errorText","props","id","error","inputProps","ref","undefined","helperText","createElement"],"mappings":"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","sourcesContent":["import React, { FunctionComponent } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { TextField } from '@material-ui/core'\nimport Navbar from '../components/navbar'\nimport Container from '@material-ui/core/Container'\nimport { FieldErrors } from 'react-hook-form/dist/types/form'\nimport Grid from '@material-ui/core/Grid'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\n\nexport const FormContext = React.createContext<Partial<FormContext>>({})\n\ntype FormContext = {\n\terrors: FieldErrors\n\tregister: any\n}\n\ntype Inputs = {\n\tname: string\n\tcomposer: string\n\ttype: string\n\tkey: string\n\tabc: string\n}\n\n\n\nexport default function TuneForm() {\n\tconst { register, handleSubmit, watch, errors } = useForm<Inputs>()\n\tconst context: FormContext = { errors, register }\n\n\tconst onSubmit = (data: Inputs) => console.log(data)\n\tconsole.log(watch('Add a tune'))\n\treturn (\n\t\t<>\n\t\t\t<Navbar/>\n\t\t\t<Container maxWidth=\"sm\">\n\t\t\t\t<FormContext.Provider value={context}>\n\t\t\t\t\t<form onSubmit={handleSubmit(onSubmit)}>\n\t\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t\t<FormField label=\"Name\" name=\"name\" component={TextField} required/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t\t<FormField label=\"Composer\" name=\"composer\" component={TextField} required/>\n\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t\t<FormField label=\"Key\" name=\"key\" component={TextField} required/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t\t\t<FormField label=\"ABC\" name=\"abc\" component={TextField} required/>\n\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t</form>\n\t\t\t\t</FormContext.Provider>\n\t\t\t</Container>\n\t\t</>\n\t)\n}\n\ntype FieldWrapperProps = {\n\tlabel: string\n\tname: string\n\tcomponent: React.FunctionComponent | React.ComponentClass\n\trequired: boolean\n\terrorText?: string\n}\n\ntype FieldProps = {\n\terror: boolean\n\tid: string\n\tname: string\n\tinputProps?: object\n\tlabel: string\n\thelperText?: string\n}\n\nconst FormField: FunctionComponent<FieldWrapperProps> = ({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t label,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t name,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t component,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t required,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t errorText,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t }) => {\n\treturn (\n\t\t<FormContext.Consumer>\n\t\t\t{({ errors, register }) => {\n\t\t\t\tconst props: FieldProps = {\n\t\t\t\t\tname,\n\t\t\t\t\tid: name,\n\t\t\t\t\terror: errors && errors[name],\n\t\t\t\t\tlabel,\n\t\t\t\t\tinputProps: required ? { ref: register({ required: true }) } : undefined,\n\t\t\t\t\thelperText: errorText,\n\t\t\t\t}\n\t\t\t\treturn React.createElement<Partial<FieldProps>>(component, props)\n\t\t\t}}\n\t\t</FormContext.Consumer>\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}